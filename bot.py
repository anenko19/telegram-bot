import time
import requests
import random

# üîπ –î–∞–Ω–Ω—ã–µ API
BASE_URL = "https://tvoyhod.online"
LOGIN_URL = f"{BASE_URL}/api/auth/login"
SURVEY_LIST_URL = f"{BASE_URL}/api/survey/list"
SURVEY_DETAIL_URL = f"{BASE_URL}/api/survey/detail"
SURVEY_ANSWER_URL = f"{BASE_URL}/api/survey/answer"
TELEGRAM_BOT_TOKEN = "8066056191:AAED0C-0KtQBRKTsItV60-lAPe-md0eUblw"
TELEGRAM_CHAT_ID = "408805483"

HEADERS = {
    "User-Agent":
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36",
    "Accept": "application/json",
    "Content-Type": "application/json",
    "Referer": "https://tvoyhod.online/auth/signin"
}

# üîπ –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞
data = {"email": "anenko-a@mail.ru", "password": "346123Cfif"}

# üîπ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞
session = requests.Session()
print("üîÑ –û—Ç–ø—Ä–∞–≤–ª—è—é –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞...")
response = session.post(LOGIN_URL, json=data, headers=HEADERS)

if response.status_code == 200:
    response_data = response.json()
    token = response_data.get("token")
    if not token:
        print("‚ùå –û—à–∏–±–∫–∞: —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Ç–≤–µ—Ç–µ —Å–µ—Ä–≤–µ—Ä–∞!")
        exit()
    print("‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è! –¢–æ–∫–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω.")
    HEADERS["Authorization"] = f"Bearer {token}"
else:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {response.status_code}")
    print("–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", response.text)
    exit()


# üîπ –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ Telegram
def send_telegram_message(text):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram"""
    url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
    payload = {"chat_id": TELEGRAM_CHAT_ID, "text": text}
    requests.post(url, json=payload)


# üîπ –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π –æ–ø—Ä–æ—Å–∞
def get_survey_details(survey_id):
    """–ü–æ–ª—É—á–∞–µ—Ç –¥–µ—Ç–∞–ª–∏ –æ–ø—Ä–æ—Å–∞"""
    response = session.get(f"{SURVEY_DETAIL_URL}/{survey_id}", headers=HEADERS)
    if response.status_code == 200:
        return response.json()
    else:
        print(
            f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–µ—Ç–∞–ª–µ–π –æ–ø—Ä–æ—Å–∞ {survey_id}: {response.status_code}"
        )
        return None


# üîπ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–æ–≤
def generate_answers(questions):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã"""
    answers = {}
    for question in questions:
        q_id = question["id"]
        q_options = question.get("options", [])

        if q_options:
            answer = random.choice(q_options)  # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
        else:
            answer = "–ù–µ –∑–Ω–∞—é"  # –û—Ç–≤–µ—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

        answers[q_id] = answer

    return answers


# üîπ –ü—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –æ–ø—Ä–æ—Å–∞
def complete_survey(survey_id):
    """–§—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –æ–ø—Ä–æ—Å–∞"""
    details = get_survey_details(survey_id)
    if not details:
        return

    questions = details.get("questions", [])
    if not questions:
        print(f"‚ö†Ô∏è –û–ø—Ä–æ—Å {survey_id} –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –≤–æ–ø—Ä–æ—Å–æ–≤.")
        return

    answers = generate_answers(questions)

    payload = {"survey_id": survey_id, "answers": answers}

    response = session.post(SURVEY_ANSWER_URL, json=payload, headers=HEADERS)
    if response.status_code == 200:
        print(f"‚úÖ –û–ø—Ä–æ—Å {survey_id} —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω!")
        send_telegram_message(f"‚úÖ –û–ø—Ä–æ—Å {survey_id} –ø—Ä–æ–π–¥–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!")
    else:
        print(
            f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–∏ –æ–ø—Ä–æ—Å–∞ {survey_id}: {response.status_code}"
        )
        send_telegram_message(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–∏ –æ–ø—Ä–æ—Å–∞ {survey_id}")


# üîπ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö –æ–ø—Ä–æ—Å–æ–≤
def check_new_surveys():
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤—ã—Ö –æ–ø—Ä–æ—Å–æ–≤."""
    response = session.get(SURVEY_LIST_URL, headers=HEADERS)

    if response.status_code == 200:
        try:
            surveys = response.json()
            new_surveys = [s for s in surveys if "id" in s]

            if new_surveys:
                print("üÜï –ù–∞–π–¥–µ–Ω—ã –Ω–æ–≤—ã–µ –æ–ø—Ä–æ—Å—ã:")
                for survey in new_surveys:
                    print(f"- {survey['title']}")
                    send_telegram_message(
                        f"üÜï –ù–∞–π–¥–µ–Ω –Ω–æ–≤—ã–π –æ–ø—Ä–æ—Å: {survey['title']}")
                    complete_survey(survey["id"])
            else:
                print("‚úÖ –ù–æ–≤—ã—Ö –æ–ø—Ä–æ—Å–æ–≤ –Ω–µ—Ç.")
        except requests.exceptions.JSONDecodeError:
            print(
                "‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ JSON: —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç.")
    else:
        print(
            f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –æ–ø—Ä–æ—Å–æ–≤: {response.status_code}")


# üîπ –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ–ø—Ä–æ—Å–æ–≤...")
while True:
    check_new_surveys()
    time.sleep(600)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑ –≤ –º–∏–Ω—É—Ç—É
